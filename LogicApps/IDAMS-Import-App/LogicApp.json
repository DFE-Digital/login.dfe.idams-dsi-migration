{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "westeurope",
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "azureblob_1_Connection_Name": {
      "type": "string",
      "defaultValue": "s141d02-pirean-dsiappblobconnector"
    },
    "azureblob_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "s141d02-pirean-dsiappblobconnector"
    },
    "azureblob_1_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      },
      "defaultValue": "s141d02pireanstorage"
    },
    "azureblob_1_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    },
    "azureblob_1_authType": {
      "type": "string",
      "metadata": {
        "description": "Authentication type to connect to your database"
      },
      "defaultValue": "basic",
      "allowedValues": [
        "basic",
        "anonymous"
      ]
    },
    "azureblob_1_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "defaultValue": "Private",
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ]
    },
    "office365_1_Connection_Name": {
      "type": "string",
      "defaultValue": "s141d02-pirean-dsiappoffice365connector"
    },
    "office365_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "Pirean-DSI.Migration1@education.gov.uk"
    },
    "Email_1_From": {
      "type": "string",
      "defaultValue": "zeeshan.abbas@education.gov.uk;zeeshan.abbas@digital.gov.uk"
    },
    "environmentId": {
          "type": "string",
          "defaultValue": "d02",
          "allowedValues": [
              "d01",
              "d02",
              "t01",
              "t02",
              "t03",
              "p01",
              "p02"
          ],
          "metadata": {
              "description": "Environment Identifier"
          }
      },
      "projectId": {
          "type": "string",
          "defaultValue": "s141",
          "metadata": {
              "description": "Project Identifier"
          }
      },
      "serviceName": {
          "type": "string",
          "defaultValue": "pirean",
          "metadata": {
              "description": "Service Identifier"
          }
      }
  },
   "variables": {
      "baseName": "[tolower(concat(parameters('projectId'), parameters('environmentId'), '-', parameters('serviceName'), '-', parameters('logicAppName')))]",
      "resourceNames": {
        "storageAccountName": "[tolower(concat(parameters('projectId'), parameters('environmentId'), parameters('serviceName'),'idamsdsiapp'))]",
        "functionName": "[variables('baseName')]",
        "functionAppServicePlanName": "[concat(variables('baseName'), '-asp')]",
        "appInsightsName": "[concat(variables('baseName'), '-ai')]"
      },
      "resourceIds": {
        "functionAppServicePlanId": "[resourceId('Microsoft.Resources/deployments', variables('resourceNames').functionAppServicePlanName)]",
        "functionId": "[resourceId('Microsoft.Web/sites', variables('resourceNames').functionName)]",
        "storageAccountId": "[resourceId('Microsoft.Resources/deployments', variables('resourceNames').storageAccountName)]",
        "appInsightsId": "[resourceId('microsoft.insights/components', variables('resourceNames').appInsightsName)]"
      }
   },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
       "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "name": "[variables('resourceNames').storageAccountName]",
      "location": "[parameters('logicAppLocation')]"
      
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('resourceNames').functionAppServicePlanName]",
      "location": "[parameters('logicAppLocation')]",
      "sku": {
        "name": "WS1",
        "tier": "WorkflowStandard"
      },
      "kind": "windows"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('logicAppLocation')]",
      "kind": "workflowapp,functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('resourceNames').functionAppServicePlanName) ]",
        "siteConfig": {
          "netFrameworkVersion": "v4.6",
          "appSettings": [
            {
              "name": "APP_KIND",
              "value": "workflowApp"
            },
            {
              "name": "AzureFunctionsJobHost__extensionBundle__id",
              "value": "Microsoft.Azure.Functions.ExtensionBundle.Workflows"
            },
            {
              "name": "AzureFunctionsJobHost__extensionBundle__version",
              "value": "[1.*, 2.0.0"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('resourceNames').storageAccountName,';AccountKey=',concat(listKeys(concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('resourceNames').storageAccountName),'2019-06-01').keys[0].value),';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_V2_COMPATIBILITY_MODE",
              "value": "true"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('resourceNames').storageAccountName,';AccountKey=',concat(listKeys(concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('resourceNames').storageAccountName),'2019-06-01').keys[0].value),';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[parameters('logicAppName')]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~12"
            }, 
            {
              "name": "WORKFLOWS_SUBSCRIPTION_ID", 
              "value": "[subscription().subscriptionId]"
            },
            {
              "name": "WORKFLOWS_LOCATION_NAME", 
              "value": "[parameters('logicAppLocation')]"
            },
            {
              "name": "WORKFLOWS_RESOURCE_GROUP_NAME", 
              "value": ""
            },
            {
              "name": "BLOB_CONNECTION_RUNTIMEURL", 
              "value": ""
            }              
          ]
        },
           "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Get_all_the_attachments": {
              "type": "Foreach",
              "foreach": "@triggerBody()?['attachments']",
              "actions": {
                "Create_blob_(V2)": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": "@base64ToBinary(items('Get_all_the_attachments')?['contentBytes'])",
                    "headers": {
                      "ReadFileMetadataFromServer": true
                    },
                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(variables('BlobStorageName')))}/files",
                    "queries": {
                      "folderPath": "/attachments",
                      "name": "@{formatDateTime(utcNow(), 'dd-MM-yyyyTHH:mm:ss')}-@{items('Get_all_the_attachments')?['name']}",
                      "queryParametersSingleEncoded": true
                    }
                  },
                  "runAfter": {},
                  "runtimeConfiguration": {
                    "contentTransfer": {
                      "transferMode": "Chunked"
                    }
                  }
                }
              },
              "runAfter": {
                "Initialize_BlobStorageName": [
                  "Succeeded"
                ]
              }
            },
            "Delete_email_(V2)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "method": "delete",
                "path": "/codeless/v1.0/me/messages/@{encodeURIComponent(triggerBody()?['id'])}"
              },
              "runAfter": {
                "Get_all_the_attachments": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_BlobStorageName": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "BlobStorageName",
                    "type": "string",
                    "value": "[parameters('azureblob_1_accountName')]"
                  }
                ]
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "$emailFrom": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_new_email_arrives_(V3)": {
              "type": "ApiConnectionNotification",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "fetch": {
                  "queries": {
                    "folderPath": "Inbox",
                    "from": "@{parameters('$emailfrom')['addresses']['name']}",
                    "importance": "Any",
                    "fetchOnlyWithAttachment": true,
                    "includeAttachments": true
                  },
                  "pathTemplate": {
                    "template": "/v3/Mail/OnNewEmail"
                  },
                  "method": "get"
                },
                "subscribe": {
                  "queries": {
                    "folderPath": "Inbox",
                    "importance": "Any",
                    "fetchOnlyWithAttachment": true
                  },
                  "body": {
                    "NotificationUrl": "@{listCallbackUrl()}"
                  },
                  "pathTemplate": {
                    "template": "/GraphMailSubscriptionPoke/$subscriptions"
                  },
                  "method": "post"
                }
              },
              "splitOn": "@triggerBody()?['value']"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
                "connectionName": "[parameters('azureblob_1_Connection_Name')]"
              },
              "office365": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]",
                "connectionName": "[parameters('office365_1_Connection_Name')]"
              }
            }
          },
          "$emailFrom": {
            "value": {
              "addresses": {
                "name": "[parameters('Email_1_From')]"
              }
            }
          }
        },
        "clientAffinityEnabled": false
      },
       "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]"
      ]
    },
    
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureblob_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureblob')]"
        },
        "displayName": "[parameters('azureblob_1_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob_1_accountName')]",
          "accessKey": "[parameters('azureblob_1_accessKey')]",
          "authType": "[parameters('azureblob_1_authType')]",
          "privacySetting": "[parameters('azureblob_1_privacySetting')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('office365_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]"
        },
        "displayName": "[parameters('office365_1_Connection_DisplayName')]"
      }
    }
  ],
  "outputs": {
    "logicAppSystemAssignedIdentityTenantId": {
      "type": "string",
      "value": "[subscription().tenantid]"
    },
    "logicAppSystemAssignedIdentityObjectId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('logicAppName')),'2019-08-01', 'full').identity.principalId]"
    },
    "LAname": {
      "type": "string",
      "value": "[parameters('logicAppName')]"
    }
  }
}