parameters:
    - name: serviceConnection
      type: string
    - name: subscriptionId
      type: string
    - name: deploymentLocation
      type: string
      default: westeurope
    - name: pireanstorageaccountname
      type: string
    - name: projectId
      type: string
      default: s141
    - name: environmentId
      type: string
    - name: environmentName
      type: string
    - name: servicePlanSkuName
      type: string
      default: Y1
    - name: sevicePlanSkuTier
      type: string
      default: Dynamic
    - name: topicName
      type: string
      default: audit
    - name: platformVariableGroupName
      type: string
    - name: shdResourceGroup
      type: string
    - name: platformIdamsVariableGroupName
      type: string
jobs:
- deployment: 'deploy_${{parameters.environmentName}}'
  displayName: 'Deploy [${{parameters.environmentName}}]'
  environment: '${{parameters.environmentName}}'
  pool:
    vmImage: ubuntu-latest
  variables:
  - group: '${{parameters.platformVariableGroupName}}'
  - group: '${{parameters.platformIdamsVariableGroupName}}'
  - name: resourceGroupName
    value: '${{parameters.projectId}}${{parameters.environmentId}}-dataimport'
 
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
        - download: current

        - task: AzureCLI@2
          displayName: 'Azure CLI - Promote Service Principal'
          inputs:
            azureSubscription: '${{parameters.serviceConnection}}'
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
                  
                    Write-Host "##vso[task.setvariable variable=ARM_CLIENT_ID]$env:servicePrincipalId"
                    Write-Host "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$env:servicePrincipalKey"
                    Write-Host "##vso[task.setvariable variable=ARM_TENANT_ID]$env:tenantId"
            addSpnToEnvironment: true
         
        - task: AzurePowerShell@5
          displayName: Connect with Az
          inputs:
            azureSubscription: '${{parameters.serviceConnection}}'
            ScriptType: InlineScript
            Inline: |
                 
                   $username = "$(ARM_CLIENT_ID)"
                   $password = "$(ARM_CLIENT_SECRET)"
                   $tenantId = "$(ARM_TENANT_ID)"
                   az login --service-principal --username  $username --password $password --tenant $tenantId

            azurePowerShellVersion: 'LatestVersion'  
        
        - task: AzurePowerShell@5
          displayName: Create Attachments Container
          inputs:
            azureSubscription: '${{parameters.serviceConnection}}'
            ScriptType: 'FilePath'
            scriptPath: './powershell/Container.ps1'
            ScriptArguments: '-StorageAccountName ${{parameters.pireanstorageaccountname}} -ContainerName "attachments"'
            azurePowerShellVersion: 'LatestVersion'
            pwsh: true

        - task: AzurePowerShell@5
          displayName: Create Shared App Insights Resource
          inputs:
            azureSubscription: ${{parameters.serviceConnection}}
            ScriptType: 'FilePath'
            ScriptPath: ./powershell/Create-Shared-AppInsight-Resource.ps1
            ScriptArguments: '-resourceGroupName $(vnetresourcegroupname) -location "westeurope" -applicationInsightsName $(sharedPireanAppInsightsName) '
            azurePowerShellVersion: 'LatestVersion'
            pwsh: true

        - task: AzurePowerShell@5
          displayName: Create & Associate Private Link Scope with App Insights
          inputs:
            azureSubscription: ${{parameters.serviceConnection}}
            ScriptType: 'FilePath'
            ScriptPath: ./powershell/Create-PrivateLinkScope-For-AppInsight-Resource.ps1
            ScriptArguments: '-resourceGroupName $(vnetresourcegroupname) -location "westeurope" -applicationInsightsName $(sharedPireanAppInsightsName) -scopeName $(scopeName) -environmentName ${{parameters.environmentName}} -vNetName $(vnetname) -vnetsubnetaddressprefixampls $(vnetsubnetaddressprefixampls) '
            azurePowerShellVersion: 'LatestVersion'
            pwsh: true

        
       