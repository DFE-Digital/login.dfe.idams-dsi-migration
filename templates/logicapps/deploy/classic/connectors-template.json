{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
              "description": "The datacenter to use for the deployment."
            }
        },
       
        "sa_name": {
            "defaultValue": "sa",
            "type": "string"
        }, 
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "string"
        }
    },
    "variables": {
        "sa": "[concat(toLower(parameters('sa_name')))]"
    },
    "resources": [
        
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2018-02-01",
            "name": "[concat(variables('sa'), '/default/blobs')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('sa'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "Container"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_name')]",
            "location": "[parameters('location')]",
            "kind": "V2",            
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('sa'))]"
            ],
            "properties": {
                "displayName": "privatestorage",
                "parameterValues": {
                    "accountName": "[variables('sa')]", 
                    "accessKey": "[concat(listKeys(concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('sa')),'2019-06-01').keys[0].value)]"
                },
                "api": {
                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('location'),'/managedApis/azureblob')]"
                }
            }
        }
       
    ],
    "outputs": {
      "blobendpointurl": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name')),'2016-06-01', 'full').properties.connectionRuntimeUrl]"
      }
    }
  }