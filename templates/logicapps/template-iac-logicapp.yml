# IaC Logic App resources deployment template

parameters:
- name: environment
  type: string
- name: environmentId
  type: string
- name: serviceConnection
  type: string
- name: variableGroups
  type: object

jobs:
- deployment: deploy_logicapp_resources
  displayName: Deploy Logic App Resources
  pool:
    vmImage: 'windows-latest'
  environment: ${{ parameters.environment }}
  variables: 
  - '${{ each variableGroup in parameters.variableGroups }}':
    - group: '${{variableGroup}}'
  strategy:
    runOnce:
      deploy:
        steps:
        - download: current
          artifact: $(artifactName)

        - task: AzureResourceGroupDeployment@2
          displayName: 'Deploy Logic App'
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            resourceGroupName: "s141d02-idamsdsiapp"
            
            location: 'westeurope'
            csmFile: '$(Pipeline.Workspace)/$(artifactName)/classic/logicapp-template.json'
            overrideParameters: '
              -logicAppLocation $(logicapplocation)
              -environmentName ${{ parameters.environment }}
              -projectName $(projectName)
              -logicAppName $(logicappname)
              -appServicePlanName "idamsdsiapp-asp"
              -storageName "s141d02logicappstorage"
              -azureblob_1_accountName $(azureblobaccountname)
              -azureblob_1_Connection_Name $(azureblobconnectionname)
              -office365_1_Connection_Name $(office365connectionname)
              -office365_1_Connection_DisplayName $(office365connectiondisplayname)
              -azureblob_1_Connection_DisplayName $(azureblobconnectiondisplayname)
              -azureblob_1_accessKey $(azureblobaccesskey)
              -azureblob_1_authType $(azureblobauthtype)
              -azureblob_1_privacySetting $(azureblobprivacysetting)
              -Email_1_From $(logicappemailfrom)'
            deploymentMode: $(deploymentMode)
            deploymentOutputs: 'LogicAppArmOutputs'

        - task: ARM Outputs@6
          displayName: 'ARM Outputs'
          inputs:
            ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
            ConnectedServiceNameARM: ${{ parameters.serviceConnection }}
            resourceGroupName: "s141d02-idamsdsiapp"
            whenLastDeploymentIsFailed: 'fail'

        - task: AzureResourceGroupDeployment@2
          displayName: 'Deploy Connectors'
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            resourceGroupName: "s141d02-idamsdsiapp"
            location: "westeurope"
            csmFile: '$(Pipeline.Workspace)/$(artifactName)/classic/connectors-template.json'
            overrideParameters: '
              -logicAppName $(logicappname)
              -logicAppLocation $(logicapplocation)
              -azureblob_1_Connection_Name $(azureblobconnectionname)
              -azureblob_1_Connection_DisplayName $(azureblobconnectiondisplayname)
              -azureblob_1_accountName $(azureblobaccountname)
              -azureblob_1_accessKey $(azureblobaccesskey)
              -azureblob_1_authType $(azureblobauthtype)
              -azureblob_1_privacySetting $(azureblobprivacysetting)
              -office365_1_Connection_Name $(office365connectionname)
              -office365_1_Connection_DisplayName $(office365connectiondisplayname)
              -Email_1_From $(logicappemailfrom)
              -environmentId ${{parameters.environmentId}}
              -projectId "s141"
              -serviceName "pirean"'
              
            deploymentMode: $(deploymentMode)
        - task: AzureCLI@2
                displayName: 'Azure CLI - Promote Service Principal'
                inputs:
                  azureSubscription: ${{ parameters.serviceConnection }}
                  scriptType: pscore
                  scriptLocation: inlineScript
                  inlineScript: |
                  
                    Write-Host "##vso[task.setvariable variable=ARM_CLIENT_ID]$env:servicePrincipalId"
                    Write-Host "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$env:servicePrincipalKey"
                    Write-Host "##vso[task.setvariable variable=ARM_TENANT_ID]$env:tenantId"
                  addSpnToEnvironment: true
              - task: AzurePowerShell@5
                displayName: Connect with Az
                inputs:
                  azureSubscription: ${{ parameters.serviceConnection }}
                  ScriptType: InlineScript
                  Inline: |
                 
                   $username = "$(ARM_CLIENT_ID)"
                   $password = "$(ARM_CLIENT_SECRET)"
                   $tenantId = "$(ARM_TENANT_ID)"
                   az login --service-principal --username  $username --password $password --tenant $tenantId

                  azurePowerShellVersion: 'LatestVersion'      
        - task: ARM Outputs@6
          displayName: 'ARM Outputs Connections'
          inputs:
            ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
            ConnectedServiceNameARM: ${{ parameters.serviceConnection }}
            resourceGroupName: "s141d02-idamsdsiapp"
            whenLastDeploymentIsFailed: 'fail'
        - pwsh: |
            Start-AzureStorageFileCopy -SrcShareName "s141d02-pirean-idamsdsiapp" -SrcFilePath $(Pipeline.Workspace)/$(artifactName)/classic/ -DestShareName "s141d02-pirean-idamsdsiapp" -DestFilePath "s141d02-pirean-idamsdsiapp/site/wwwroot/"
          displayName: 'Copy Workflow and Connectors to Azure Storage'
        
        # - task: AzureFileCopy@3
        #   displayName: 'Copy Workflow and Connectors to Azure Storage'
        #   inputs:
        #     SourcePath: '$(Pipeline.Workspace)/$(artifactName)/classic/'
        #     azureSubscription:  ${{ parameters.serviceConnection }}
        #     Destination: AzureFileShare
        #     storage: s141d02logicappstorage
        #     containerName: /s141d02-pirean-idamsdsiapp/site/wwwroot/
            

        - task: AzureCLI@2
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az functionapp config appsettings set --name $(LAname) --resource-group  "s141d02-idamsdsiapp" --settings "BLOB_CONNECTION_RUNTIMEURL=$(idamsblobstorageconnectionstring)"
              az functionapp config appsettings set --name $(LAname) --resource-group  "s141d02-idamsdsiapp" --settings "WORKFLOWS_RESOURCE_GROUP_NAME=s141d02-idamsdsiapp"
            addSpnToEnvironment: true
            useGlobalConfig: true